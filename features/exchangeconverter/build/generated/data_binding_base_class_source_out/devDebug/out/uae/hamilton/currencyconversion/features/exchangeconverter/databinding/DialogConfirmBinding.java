// Generated by data binding compiler. Do not edit!
package uae.hamilton.currencyconversion.features.exchangeconverter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import uae.hamilton.currencyconversion.features.exchangeconverter.R;
import uae.hamilton.exchangeconverter.features.exchangeconverter.dialog.ConfirmDialogViewModel;

public abstract class DialogConfirmBinding extends ViewDataBinding {
  @NonNull
  public final ImageView closeBtn;

  @NonNull
  public final AppCompatButton confirmBtn;

  @NonNull
  public final AppCompatTextView descTV;

  @NonNull
  public final AppCompatButton dismissBtn;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final AppCompatTextView titleTV;

  @Bindable
  protected ConfirmDialogViewModel mViewModel;

  @Bindable
  protected String mTitle;

  @Bindable
  protected String mDesc;

  @Bindable
  protected String mConfirm;

  @Bindable
  protected String mDismiss;

  protected DialogConfirmBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView closeBtn, AppCompatButton confirmBtn, AppCompatTextView descTV,
      AppCompatButton dismissBtn, Guideline guideline, AppCompatTextView titleTV) {
    super(_bindingComponent, _root, _localFieldCount);
    this.closeBtn = closeBtn;
    this.confirmBtn = confirmBtn;
    this.descTV = descTV;
    this.dismissBtn = dismissBtn;
    this.guideline = guideline;
    this.titleTV = titleTV;
  }

  public abstract void setViewModel(@Nullable ConfirmDialogViewModel viewModel);

  @Nullable
  public ConfirmDialogViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setTitle(@Nullable String title);

  @Nullable
  public String getTitle() {
    return mTitle;
  }

  public abstract void setDesc(@Nullable String desc);

  @Nullable
  public String getDesc() {
    return mDesc;
  }

  public abstract void setConfirm(@Nullable String confirm);

  @Nullable
  public String getConfirm() {
    return mConfirm;
  }

  public abstract void setDismiss(@Nullable String dismiss);

  @Nullable
  public String getDismiss() {
    return mDismiss;
  }

  @NonNull
  public static DialogConfirmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_confirm, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DialogConfirmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DialogConfirmBinding>inflateInternal(inflater, R.layout.dialog_confirm, root, attachToRoot, component);
  }

  @NonNull
  public static DialogConfirmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_confirm, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DialogConfirmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DialogConfirmBinding>inflateInternal(inflater, R.layout.dialog_confirm, null, false, component);
  }

  public static DialogConfirmBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DialogConfirmBinding bind(@NonNull View view, @Nullable Object component) {
    return (DialogConfirmBinding)bind(component, view, R.layout.dialog_confirm);
  }
}
