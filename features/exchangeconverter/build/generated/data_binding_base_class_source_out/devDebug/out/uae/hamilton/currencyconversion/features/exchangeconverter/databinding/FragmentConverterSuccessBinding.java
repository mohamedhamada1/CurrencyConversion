// Generated by data binding compiler. Do not edit!
package uae.hamilton.currencyconversion.features.exchangeconverter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import uae.hamilton.currencyconversion.features.exchangeconverter.R;
import uae.hamilton.exchangeconverter.features.exchangeconverter.success.SuccessConverterViewModel;

public abstract class FragmentConverterSuccessBinding extends ViewDataBinding {
  @NonNull
  public final TextView TVConversionResult;

  @NonNull
  public final TextView TVRate;

  @NonNull
  public final ImageView confirmImg;

  @Bindable
  protected SuccessConverterViewModel mViewModel;

  protected FragmentConverterSuccessBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView TVConversionResult, TextView TVRate, ImageView confirmImg) {
    super(_bindingComponent, _root, _localFieldCount);
    this.TVConversionResult = TVConversionResult;
    this.TVRate = TVRate;
    this.confirmImg = confirmImg;
  }

  public abstract void setViewModel(@Nullable SuccessConverterViewModel viewModel);

  @Nullable
  public SuccessConverterViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentConverterSuccessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_converter_success, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentConverterSuccessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentConverterSuccessBinding>inflateInternal(inflater, R.layout.fragment_converter_success, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentConverterSuccessBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_converter_success, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentConverterSuccessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentConverterSuccessBinding>inflateInternal(inflater, R.layout.fragment_converter_success, null, false, component);
  }

  public static FragmentConverterSuccessBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentConverterSuccessBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentConverterSuccessBinding)bind(component, view, R.layout.fragment_converter_success);
  }
}
